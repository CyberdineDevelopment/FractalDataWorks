{
  "$schema": "http://json.schemastore.org/template",
  "author": "FractalDataWorks Developer Kit",
  "classifications": ["FractalDataWorks", "Connection", "Service", "Data"],
  "identity": "FractalDataWorks.Service.Connection.Template",
  "name": "FractalDataWorks Connection Service",
  "description": "Creates a FractalDataWorks connection service for databases, APIs, message queues, or caches with optional state machine, transactions, and query translation.",
  "shortName": "fractaldataworks-connection",
  "tags": {
    "language": "C#",
    "type": "project"
  },
  "sourceName": "ConnectionType",
  "preferNameDirectory": true,
  "symbols": {
    "ConnectionType": {
      "type": "parameter",
      "datatype": "string",
      "description": "The connection type name (e.g., PostgreSql, MongoDB, Redis, RabbitMQ)",
      "replaces": "ConnectionType",
      "fileRename": "ConnectionType",
      "defaultValue": "MyConnection",
      "isRequired": true
    },
    "ConnectionCategory": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "Database",
          "description": "Database connection (SQL, NoSQL)"
        },
        {
          "choice": "MessageQueue",
          "description": "Message queue connection (RabbitMQ, Kafka)"
        },
        {
          "choice": "Cache",
          "description": "Cache connection (Redis, Memcached)"
        },
        {
          "choice": "Api",
          "description": "API connection (REST, GraphQL)"
        },
        {
          "choice": "Custom",
          "description": "Custom connection type"
        }
      ],
      "defaultValue": "Database",
      "replaces": "CONNECTION_CATEGORY"
    },
    "IncludeStateMachine": {
      "type": "parameter",
      "datatype": "bool",
      "description": "Include connection state tracking (uses ConnectionStates from framework)",
      "defaultValue": "true"
    },
    "IncludeTransactions": {
      "type": "parameter",
      "datatype": "bool",
      "description": "Include transaction support (begin, commit, rollback)",
      "defaultValue": "true"
    },
    "IncludeQueryTranslator": {
      "type": "parameter",
      "datatype": "bool",
      "description": "Include LINQ-to-native query translator",
      "defaultValue": "true"
    },
    "IncludeMessages": {
      "type": "parameter",
      "datatype": "bool",
      "description": "Include message collection with source generation",
      "defaultValue": "true"
    },
    "IncludeLogging": {
      "type": "parameter",
      "datatype": "bool",
      "description": "Include structured logging with source generation",
      "defaultValue": "true"
    },
    "TargetFramework": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "net10.0",
          "description": ".NET 10.0"
        },
        {
          "choice": "netstandard2.0;net10.0",
          "description": ".NET Standard 2.0 + .NET 10.0"
        }
      ],
      "defaultValue": "net10.0",
      "replaces": "TARGET_FRAMEWORK"
    }
  },
  "sources": [
    {
      "modifiers": [
        {
          "condition": "(!IncludeStateMachine)",
          "exclude": [
            "**/States/**"
          ]
        },
        {
          "condition": "(!IncludeTransactions)",
          "exclude": [
            "**/Transactions/**"
          ]
        },
        {
          "condition": "(!IncludeQueryTranslator)",
          "exclude": [
            "**/Translators/**"
          ]
        },
        {
          "condition": "(!IncludeMessages)",
          "exclude": [
            "**/Messages/**"
          ]
        },
        {
          "condition": "(!IncludeLogging)",
          "exclude": [
            "**/Logging/**"
          ]
        }
      ]
    }
  ],
  "postActions": [
    {
      "description": "Restore NuGet packages for generated project",
      "manualInstructions": [
        {
          "text": "Run 'dotnet restore' in the project directory"
        }
      ],
      "actionId": "210D431B-A78B-4D2F-B762-4ED3E3EA9025",
      "continueOnError": true
    }
  ]
}
