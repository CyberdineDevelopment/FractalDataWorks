using System;
using System.Collections.Generic;
using FractalDataWorks.Services.DataGateway.Abstractions.Models;

namespace FractalDataWorks.Services.DataGateway.Abstractions.Commands;

/// <summary>
/// Command for executing data queries against data gateways.
/// </summary>
public sealed class DataQueryCommand : IDataGatewayCommand
{
    /// <summary>
    /// Gets the command name.
    /// </summary>
    public string CommandName => "DataQuery";

    /// <summary>
    /// Gets the connection name to execute the query against.
    /// </summary>
    public string? ConnectionName { get; init; }

    /// <summary>
    /// Gets the target container for the query.
    /// </summary>
    public DataPath? TargetContainer { get; init; }

    /// <summary>
    /// Gets the query parameters.
    /// </summary>
    public IReadOnlyDictionary<string, object?> Parameters { get; init; } = new Dictionary<string, object?>();

    /// <summary>
    /// Gets the metadata for the command.
    /// </summary>
    public IReadOnlyDictionary<string, object> Metadata { get; init; } = new Dictionary<string, object>();

    /// <summary>
    /// Gets the timeout for the query execution.
    /// </summary>
    public TimeSpan? Timeout { get; init; }

    /// <summary>
    /// Gets the query expression or SQL statement.
    /// </summary>
    public string? QueryExpression { get; init; }

    /// <summary>
    /// Gets the expected result type for the query.
    /// </summary>
    public Type? ResultType { get; init; }
}