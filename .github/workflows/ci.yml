name: CI

on:
  push:
    branches:
      - master
      - develop
    paths-ignore:
      - 'README.md'
      - 'docs/**'
  pull_request:
    branches:
      - master
      - develop

env:
  DOTNET_VERSION: '10.0'
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
  DOTNET_INSTALL_DIR: ${{ github.workspace }}/.dotnet

jobs:
  build-and-test:
    name: Build and Test
    runs-on: windows-latest
    env:
      BUILD_CONFIGURATION: ${{ github.ref == 'refs/heads/master' && 'Release' || 'Debug' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ${{ env.NUGET_PACKAGES }}
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/Directory.Packages.props') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore packages
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration ${{ env.BUILD_CONFIGURATION }} --no-restore

      - name: Run tests
        run: dotnet test --configuration ${{ env.BUILD_CONFIGURATION }} --no-build --verbosity normal

      - name: Pack packages
        if: github.ref == 'refs/heads/master'
        run: dotnet pack --configuration ${{ env.BUILD_CONFIGURATION }} --no-build --output ${{ github.workspace }}/packages

      - name: Upload packages
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v4
        with:
          name: packages
          path: ${{ github.workspace }}/packages

  security-scan:
    name: Security Scan
    runs-on: windows-latest
    needs: build-and-test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop')
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: csharp

      - name: Restore packages
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:csharp"

      - name: Security audit (vulnerable packages)
        run: dotnet list package --vulnerable --include-transitive
        continue-on-error: true

  publish-packages:
    name: Publish Packages
    runs-on: windows-latest
    needs: [build-and-test, security-scan]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - name: Download packages
        uses: actions/download-artifact@v4
        with:
          name: packages
          path: ${{ github.workspace }}/packages

      - name: Push to NuGet.org
        if: env.NUGET_API_KEY != ''
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          Get-ChildItem -Path "${{ github.workspace }}/packages" -Filter "*.nupkg" -Recurse | ForEach-Object {
            dotnet nuget push $_.FullName --source "https://api.nuget.org/v3/index.json" --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate
          }
        continue-on-error: true
