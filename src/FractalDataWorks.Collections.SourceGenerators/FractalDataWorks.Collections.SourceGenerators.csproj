<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <ImplicitUsings>disable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <LangVersion>preview</LangVersion>

    <!-- Source Generator Specific -->
    <IsPackable>true</IsPackable>
    <IsRoslynComponent>true</IsRoslynComponent>
    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
    <DevelopmentDependency>true</DevelopmentDependency>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>

    <!-- Generator Debugging -->
    <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
    <CompilerGeneratedFilesOutputPath>Generated</CompilerGeneratedFilesOutputPath>
    
    <!-- Package Properties -->
    <PackageDescription>Source generators for TypeCollections including cross-assembly discovery. Enables type options to be distributed across multiple NuGet packages.</PackageDescription>
    <PackageTags>type-collections;enumeration;source-generator;roslyn;cross-assembly</PackageTags>
    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>
    
    <!-- Copy dependencies to output -->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    
    <!-- Automatic ILRepack behavior is disabled via empty ILRepack.targets file -->
    <!-- Custom ILRepack merging is handled by MergeAnalyzerDependencies target -->
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="ILRepack.Lib.MSBuild.Task">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <ProjectReference Include="..\FractalDataWorks.CodeBuilder.Abstractions\FractalDataWorks.CodeBuilder.Abstractions.csproj" PrivateAssets="all" />
    <ProjectReference Include="..\FractalDataWorks.CodeBuilder.CSharp\FractalDataWorks.CodeBuilder.CSharp.csproj" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" PrivateAssets="all" />
    <PackageReference Include="Microsoft.Bcl.HashCode" PrivateAssets="all" />
    <ProjectReference Include="..\FractalDataWorks.Collections\FractalDataWorks.Collections.csproj" PrivateAssets="all" />
    <ProjectReference Include="../FractalDataWorks.Collections.Analyzers/FractalDataWorks.Collections.Analyzers.csproj" PrivateAssets="all" />
  </ItemGroup>

  <!-- ILRepack configuration for source generator dependency merging -->
  <Target Name="MergeAnalyzerDependencies" AfterTargets="Build" Condition="'$(TargetFramework)' == 'netstandard2.0' and '$(DisableILRepack)' != 'true'">
    <PropertyGroup>
      <OriginalAssemblyPath>$(OutputPath)$(AssemblyName).original.dll</OriginalAssemblyPath>
    </PropertyGroup>
    
    <!-- Backup original assembly -->
    <Copy SourceFiles="$(OutputPath)$(AssemblyName).dll" DestinationFiles="$(OriginalAssemblyPath)" />
    
    <ItemGroup>
      <!-- Main assembly first -->
      <InputAssemblies Include="$(OriginalAssemblyPath)" />
      
      <!-- Custom dependencies to internalize -->
      <InputAssemblies Include="$(OutputPath)FractalDataWorks.SourceGenerators.dll" />
      <InputAssemblies Include="$(OutputPath)FractalDataWorks.CodeBuilder.Abstractions.dll" />
      <InputAssemblies Include="$(OutputPath)FractalDataWorks.CodeBuilder.CSharp.dll" />
      <InputAssemblies Include="$(OutputPath)FractalDataWorks.Collections.dll" />
      <InputAssemblies Include="$(OutputPath)FractalDataWorks.Collections.Analyzers.dll" />
      
      <!-- Comprehensive library search paths -->
      <LibraryPath Include="$(OutputPath)" />
      <LibraryPath Include="$(MSBuildProjectDirectory)\bin\$(Configuration)\$(TargetFramework)" />
      <!-- Use MSBuild properties for version resolution -->
      <LibraryPath Include="$(NuGetPackageRoot)microsoft.codeanalysis.common\$(MicrosoftCodeAnalysisVersion)\lib\netstandard2.0" Condition="'$(MicrosoftCodeAnalysisVersion)' != ''" />
      <LibraryPath Include="$(NuGetPackageRoot)microsoft.codeanalysis.csharp\$(MicrosoftCodeAnalysisCSharpVersion)\lib\netstandard2.0" Condition="'$(MicrosoftCodeAnalysisCSharpVersion)' != ''" />
      <LibraryPath Include="$(NuGetPackageRoot)system.collections.immutable\$(SystemCollectionsImmutableVersion)\lib\netstandard2.0" Condition="'$(SystemCollectionsImmutableVersion)' != ''" />
      <LibraryPath Include="$(NuGetPackageRoot)system.memory\$(SystemMemoryVersion)\lib\netstandard2.0" Condition="'$(SystemMemoryVersion)' != ''" />
      <!-- Fallback paths with pattern matching -->
      <LibraryPath Include="$(NuGetPackageRoot)microsoft.codeanalysis.common\**\lib\netstandard2.0" />
      <LibraryPath Include="$(NuGetPackageRoot)microsoft.codeanalysis.csharp\**\lib\netstandard2.0" />
    </ItemGroup>
    
    <Message Text="ILRepack: Merging assemblies directly to $(OutputPath)$(AssemblyName).dll" Importance="high" />
    <Message Text="ILRepack: Input assemblies: @(InputAssemblies)" Importance="normal" />
    
    <!-- ILRepack assemblies - internalize all for simplicity -->
    <ILRepack OutputFile="$(OutputPath)$(AssemblyName).dll" InputAssemblies="@(InputAssemblies)" LibraryPath="@(LibraryPath)" Internalize="true" />
    
    <!-- Clean up internalized dependency DLLs that are no longer needed -->
    <!-- Keep Collections.dll as we're packaging it separately -->
    <ItemGroup>
      <DependencyDllsToDelete Include="$(OutputPath)FractalDataWorks.SourceGenerators.dll" />
      <DependencyDllsToDelete Include="$(OutputPath)FractalDataWorks.CodeBuilder.Abstractions.dll" />
      <DependencyDllsToDelete Include="$(OutputPath)FractalDataWorks.CodeBuilder.CSharp.dll" />
      <DependencyDllsToDelete Include="$(OutputPath)FractalDataWorks.Collections.Analyzers.dll" />
    </ItemGroup>
    <Delete Files="@(DependencyDllsToDelete)" />
    
    <!-- Cleanup temporary files -->
    <Delete Files="$(OriginalAssemblyPath)" />
    
    <Message Text="ILRepack: Successfully merged source generator dependencies" Importance="high" />
  </Target>

  <ItemGroup>
    <!-- Include the merged analyzer DLL in the package -->
    <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    <!-- Include Collections.dll as a reference assembly so consumers get the base types -->
    <None Include="$(OutputPath)\FractalDataWorks.Collections.dll" Pack="true" PackagePath="lib/netstandard2.0" Visible="false" />
    <!-- Include build props in the package -->
    <None Include="build\FractalDataWorks.Collections.SourceGenerators.props" Pack="true" PackagePath="build\" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\FractalDataWorks.SourceGenerators\FractalDataWorks.SourceGenerators.csproj" />
  </ItemGroup>

</Project>
